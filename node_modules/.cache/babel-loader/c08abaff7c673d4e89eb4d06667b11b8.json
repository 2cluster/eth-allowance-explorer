{"ast":null,"code":"import React from\"react\";export function TransferFrom(_ref){var transferFromTokens=_ref.transferFromTokens,tokenSymbol=_ref.tokenSymbol,accounts=_ref.accounts;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"TransferFrom\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event){// This function just calls the transferTokens callback with the\n// form's data.\nevent.preventDefault();var formData=new FormData(event.target);var from=formData.get(\"from\");var to=formData.get(\"to\");var amount=formData.get(\"amount\");if(from&&to&&amount){transferFromTokens(from,to,amount);}}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Amount of \",tokenSymbol),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"number\",step:\"1\",name:\"amount\",placeholder:\"1\",required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Sender\"),/*#__PURE__*/React.createElement(\"select\",{name:\"from\",className:\"form-control\"},/*#__PURE__*/React.createElement(\"option\",{name:\"from\",value:accounts.borrower},\"borrower\"),/*#__PURE__*/React.createElement(\"option\",{name:\"from\",value:accounts.lender},\"lender\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Recipient\"),/*#__PURE__*/React.createElement(\"select\",{name:\"to\",className:\"form-control\"},/*#__PURE__*/React.createElement(\"option\",{name:\"to\",value:accounts.borrower},\"borrower\"),/*#__PURE__*/React.createElement(\"option\",{name:\"to\",value:accounts.lender},\"lender\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{className:\"btn btn-primary\",type:\"submit\",value:\"Transfer\"}))));}","map":{"version":3,"sources":["/Users/rudy/Code/HLF2_DEV/network/eth-allowance-explorer/src/components/TransferFrom.js"],"names":["React","TransferFrom","transferFromTokens","tokenSymbol","accounts","event","preventDefault","formData","FormData","target","from","get","to","amount","borrower","lender"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,SAASC,CAAAA,YAAT,MAAqE,IAA7CC,CAAAA,kBAA6C,MAA7CA,kBAA6C,CAAzBC,WAAyB,MAAzBA,WAAyB,CAAZC,QAAY,MAAZA,QAAY,CAC1E,mBACE,4CACE,6CADF,cAEE,4BACE,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnB;AACA;AACAA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,CAAaH,KAAK,CAACI,MAAnB,CAAjB,CACA,GAAMC,CAAAA,IAAI,CAAGH,QAAQ,CAACI,GAAT,CAAa,MAAb,CAAb,CACA,GAAMC,CAAAA,EAAE,CAAGL,QAAQ,CAACI,GAAT,CAAa,IAAb,CAAX,CACA,GAAME,CAAAA,MAAM,CAAGN,QAAQ,CAACI,GAAT,CAAa,QAAb,CAAf,CAEA,GAAID,IAAI,EAAIE,EAAR,EAAcC,MAAlB,CAA0B,CACxBX,kBAAkB,CAACQ,IAAD,CAAOE,EAAP,CAAWC,MAAX,CAAlB,CACD,CACF,CAdH,eAgBE,2BAAK,SAAS,CAAC,YAAf,eACE,8CAAkBV,WAAlB,CADF,cAEE,6BACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,QAFP,CAGE,IAAI,CAAC,GAHP,CAIE,IAAI,CAAC,QAJP,CAKE,WAAW,CAAC,GALd,CAME,QAAQ,KANV,EAFF,CAhBF,cA2BE,2BAAK,SAAS,CAAC,YAAf,eACA,0CADA,cAEE,8BAAQ,IAAI,CAAC,MAAb,CAAoB,SAAS,CAAC,cAA9B,eACE,8BAAQ,IAAI,CAAC,MAAb,CAAoB,KAAK,CAAEC,QAAQ,CAACU,QAApC,aADF,cAEE,8BAAQ,IAAI,CAAC,MAAb,CAAoB,KAAK,CAAEV,QAAQ,CAACW,MAApC,WAFF,CAFF,CA3BF,cAkCE,2BAAK,SAAS,CAAC,YAAf,eACA,6CADA,cAEE,8BAAQ,IAAI,CAAC,IAAb,CAAkB,SAAS,CAAC,cAA5B,eACE,8BAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAEX,QAAQ,CAACU,QAAlC,aADF,cAEE,8BAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAEV,QAAQ,CAACW,MAAlC,WAFF,CAFF,CAlCF,cAyCE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,SAAS,CAAC,iBAAjB,CAAmC,IAAI,CAAC,QAAxC,CAAiD,KAAK,CAAC,UAAvD,EADF,CAzCF,CAFF,CADF,CAkDD","sourcesContent":["import React from \"react\";\n\nexport function TransferFrom({ transferFromTokens, tokenSymbol, accounts }) {\n  return (\n    <div>\n      <h4>TransferFrom</h4>\n      <form\n        onSubmit={(event) => {\n          // This function just calls the transferTokens callback with the\n          // form's data.\n          event.preventDefault();\n\n          const formData = new FormData(event.target);\n          const from = formData.get(\"from\");\n          const to = formData.get(\"to\");\n          const amount = formData.get(\"amount\");\n\n          if (from && to && amount) {\n            transferFromTokens(from, to, amount);\n          }\n        }}\n      >\n        <div className=\"form-group\">\n          <label>Amount of {tokenSymbol}</label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"amount\"\n            placeholder=\"1\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label>Sender</label>\n          <select name=\"from\" className=\"form-control\">\n            <option name=\"from\" value={accounts.borrower}>borrower</option>\n            <option name=\"from\" value={accounts.lender}>lender</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n        <label>Recipient</label>\n          <select name=\"to\" className=\"form-control\">\n            <option name=\"to\" value={accounts.borrower}>borrower</option>\n            <option name=\"to\" value={accounts.lender}>lender</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Transfer\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}